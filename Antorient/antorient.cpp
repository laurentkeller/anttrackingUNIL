///////////////////////////////////////////////////////////////////////////// C++ code generated with wxFormBuilder (version Sep 12 2010)// http://www.wxformbuilder.org///// PLEASE DO "NOT" EDIT THIS FILE!///////////////////////////////////////////////////////////////////////////#include "antorient.h"///////////////////////////////////////////////////////////////////////////MainWinGui::MainWinGui( wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style ) : wxFrame( parent, id, title, pos, size, style ){	this->SetSizeHints( wxSize( 740,400 ), wxDefaultSize );	this->SetBackgroundColour( wxSystemSettings::GetColour( wxSYS_COLOUR_BTNFACE ) );		wxBoxSizer* bSizer1;	bSizer1 = new wxBoxSizer( wxHORIZONTAL );		m_scrolledWindow1 = new wxScrolledWindow( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxHSCROLL|wxVSCROLL );	m_scrolledWindow1->SetScrollRate( 5, 5 );	wxBoxSizer* bSizer2;	bSizer2 = new wxBoxSizer( wxVERTICAL );		m_bitmap1 = new wxStaticBitmap( m_scrolledWindow1, wxID_ANY, wxNullBitmap, wxDefaultPosition, wxSize( 500,500 ), 0 );	m_bitmap1->SetMinSize( wxSize( 320,320 ) );	m_bitmap1->SetMaxSize( wxSize( 1024,768 ) );		bSizer2->Add( m_bitmap1, 1, wxALIGN_CENTER|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL|wxEXPAND, 5 );		m_scrolledWindow1->SetSizer( bSizer2 );	m_scrolledWindow1->Layout();	bSizer2->Fit( m_scrolledWindow1 );	bSizer1->Add( m_scrolledWindow1, 8, wxALIGN_CENTER|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL|wxEXPAND, 0 );		m_staticline1 = new wxStaticLine( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLI_VERTICAL );	bSizer1->Add( m_staticline1, 0, wxEXPAND | wxALL, 5 );		wxBoxSizer* bSizer4;	bSizer4 = new wxBoxSizer( wxVERTICAL );		m_listCtrl1 = new wxListCtrl( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_VRULES );	m_listCtrl1->SetMinSize( wxSize( 300,146 ) );		bSizer4->Add( m_listCtrl1, 0, wxALL|wxEXPAND|wxTOP, 5 );		wxBoxSizer* bSizer5;	bSizer5 = new wxBoxSizer( wxHORIZONTAL );		m_staticText1 = new wxStaticText( this, wxID_ANY, wxT("Gamma correction:"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText1->Wrap( -1 );	bSizer5->Add( m_staticText1, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );		m_slider1 = new wxSlider( this, wxID_ANY, 10, 10, 100, wxDefaultPosition, wxSize( 100,-1 ), wxSL_HORIZONTAL );	bSizer5->Add( m_slider1, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );		m_staticText2 = new wxStaticText( this, wxID_ANY, wxT("1.00"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText2->Wrap( -1 );	bSizer5->Add( m_staticText2, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );		bSizer4->Add( bSizer5, 0, wxALIGN_CENTER|wxALIGN_TOP|wxEXPAND|wxSHAPED, 5 );		wxBoxSizer* bSizer8;	bSizer8 = new wxBoxSizer( wxHORIZONTAL );		rayon_b = new wxStaticText( this, wxID_ANY, wxT("Antenna reach: "), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );	rayon_b->Wrap( -1 );	rayon_b->SetMinSize( wxSize( 130,-1 ) );		bSizer8->Add( rayon_b, 0, wxALL|wxEXPAND, 5 );		set_antennareach_b = new wxButton( this, wxID_ANY, wxT("Set"), wxDefaultPosition, wxDefaultSize, 0 );	set_antennareach_b->Enable( false );		bSizer8->Add( set_antennareach_b, 0, wxALL, 5 );		reset_antennareach_b = new wxButton( this, wxID_ANY, wxT("Reset"), wxDefaultPosition, wxDefaultSize, 0 );	reset_antennareach_b->Enable( false );		bSizer8->Add( reset_antennareach_b, 0, wxALL, 5 );		bSizer4->Add( bSizer8, 0, 0, 5 );		wxBoxSizer* bSizer41;	bSizer41 = new wxBoxSizer( wxHORIZONTAL );		m_staticText7 = new wxStaticText( this, wxID_ANY, wxT("Tail reach:"), wxDefaultPosition, wxSize( 130,-1 ), wxALIGN_RIGHT );	m_staticText7->Wrap( -1 );	bSizer41->Add( m_staticText7, 0, wxALL|wxEXPAND, 5 );		set_tailreach_b = new wxButton( this, wxID_ANY, wxT("Set"), wxDefaultPosition, wxDefaultSize, 0 );	set_tailreach_b->Enable( false );		bSizer41->Add( set_tailreach_b, 0, wxALL, 5 );		reset_tailreach_b = new wxButton( this, wxID_ANY, wxT("Reset"), wxDefaultPosition, wxDefaultSize, 0 );	reset_tailreach_b->Enable( false );		bSizer41->Add( reset_tailreach_b, 0, wxALL, 5 );		bSizer4->Add( bSizer41, 0, 0, 5 );		wxBoxSizer* bSizer7;	bSizer7 = new wxBoxSizer( wxHORIZONTAL );		m_staticText4 = new wxStaticText( this, wxID_ANY, wxT("Ant size:"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );	m_staticText4->Wrap( -1 );	m_staticText4->SetMinSize( wxSize( 130,-1 ) );		bSizer7->Add( m_staticText4, 0, wxALL|wxEXPAND, 5 );		set_size_b = new wxButton( this, wxID_ANY, wxT("Ruler"), wxDefaultPosition, wxDefaultSize, 0 );	set_size_b->Enable( false );		bSizer7->Add( set_size_b, 0, wxALL, 5 );		reset_size_b = new wxButton( this, wxID_ANY, wxT("Reset"), wxDefaultPosition, wxDefaultSize, 0 );	reset_size_b->Enable( false );		bSizer7->Add( reset_size_b, 0, wxALL, 5 );		bSizer4->Add( bSizer7, 0, 0, 5 );		wxBoxSizer* bSizer9;	bSizer9 = new wxBoxSizer( wxHORIZONTAL );		m_staticText6 = new wxStaticText( this, wxID_ANY, wxT("Ant headwidth:"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );	m_staticText6->Wrap( -1 );	m_staticText6->SetMinSize( wxSize( 130,-1 ) );		bSizer9->Add( m_staticText6, 0, wxALL, 5 );		set_headwidth_b = new wxButton( this, wxID_ANY, wxT("Ruler"), wxDefaultPosition, wxDefaultSize, 0 );	set_headwidth_b->Enable( false );		bSizer9->Add( set_headwidth_b, 0, wxALL, 5 );		reset_headwidth_b = new wxButton( this, wxID_ANY, wxT("Reset"), wxDefaultPosition, wxDefaultSize, 0 );	reset_headwidth_b->Enable( false );		bSizer9->Add( reset_headwidth_b, 0, wxALL, 5 );		bSizer4->Add( bSizer9, 0, wxEXPAND, 5 );		bSizer1->Add( bSizer4, 10, wxEXPAND, 5 );		this->SetSizer( bSizer1 );	this->Layout();	m_statusBar1 = this->CreateStatusBar( 1, wxST_SIZEGRIP, wxID_ANY );	m_menubar1 = new wxMenuBar( 0 );	m_menu1 = new wxMenu();	wxMenuItem* m_menuItem2;	m_menuItem2 = new wxMenuItem( m_menu1, wxID_ANY, wxString( wxT("Load tracking data file...") ) , wxEmptyString, wxITEM_NORMAL );	m_menu1->Append( m_menuItem2 );		wxMenuItem* m_menuItem3;	m_menuItem3 = new wxMenuItem( m_menu1, wxID_ANY, wxString( wxT("Load frame image...") ) + wxT('\t') + wxT("Ctrl+L"), wxEmptyString, wxITEM_NORMAL );	m_menu1->Append( m_menuItem3 );		wxMenuItem* m_menuItem4;	m_menuItem4 = new wxMenuItem( m_menu1, wxID_ANY, wxString( wxT("Load tag data...") ) , wxEmptyString, wxITEM_NORMAL );	m_menu1->Append( m_menuItem4 );		wxMenuItem* m_menuItem5;	m_menuItem5 = new wxMenuItem( m_menu1, wxID_ANY, wxString( wxT("Save tag data...") ) + wxT('\t') + wxT("Ctrl+S"), wxEmptyString, wxITEM_NORMAL );	m_menu1->Append( m_menuItem5 );		wxMenuItem* m_menuItem6;	m_menuItem6 = new wxMenuItem( m_menu1, wxID_ANY, wxString( wxT("Apply changes to dat file...") ) , wxEmptyString, wxITEM_NORMAL );	m_menu1->Append( m_menuItem6 );		wxMenuItem* m_separator1;	m_separator1 = m_menu1->AppendSeparator();		wxMenuItem* m_menuItem1;	m_menuItem1 = new wxMenuItem( m_menu1, wxID_EXIT, wxString( wxT("&Exit") ) + wxT('\t') + wxT("Alt+F4"), wxEmptyString, wxITEM_NORMAL );	m_menu1->Append( m_menuItem1 );		m_menubar1->Append( m_menu1, wxT("&File") ); 		this->SetMenuBar( m_menubar1 );			// Connect Events	m_scrolledWindow1->Connect( wxEVT_ENTER_WINDOW, wxMouseEventHandler( MainWinGui::show_ruler ), NULL, this );	m_scrolledWindow1->Connect( wxEVT_LEFT_DOWN, wxMouseEventHandler( MainWinGui::mark ), NULL, this );	m_scrolledWindow1->Connect( wxEVT_PAINT, wxPaintEventHandler( MainWinGui::draw_bitmap ), NULL, this );	m_listCtrl1->Connect( wxEVT_COMMAND_LIST_COL_BEGIN_DRAG, wxListEventHandler( MainWinGui::anti_resize ), NULL, this );	m_listCtrl1->Connect( wxEVT_COMMAND_LIST_ITEM_DESELECTED, wxListEventHandler( MainWinGui::update_selected_tag ), NULL, this );	m_listCtrl1->Connect( wxEVT_COMMAND_LIST_ITEM_FOCUSED, wxListEventHandler( MainWinGui::update_selected_tag ), NULL, this );	m_listCtrl1->Connect( wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEventHandler( MainWinGui::update_selected_tag ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_TOP, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_BOTTOM, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_LINEUP, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_LINEDOWN, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_PAGEUP, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_PAGEDOWN, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_THUMBTRACK, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_THUMBRELEASE, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Connect( wxEVT_SCROLL_CHANGED, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	set_antennareach_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::set_rayon ), NULL, this );	reset_antennareach_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_rayon ), NULL, this );	set_tailreach_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::set_tail ), NULL, this );	reset_tailreach_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_tail ), NULL, this );	set_size_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::ruler ), NULL, this );	reset_size_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_size ), NULL, this );	set_headwidth_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::set_headwidth ), NULL, this );	reset_headwidth_b->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_headwidth ), NULL, this );	this->Connect( m_menuItem2->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::load_tracking_file ) );	this->Connect( m_menuItem3->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::load_frame_bitmap ) );	this->Connect( m_menuItem4->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::load_rotation_data ) );	this->Connect( m_menuItem5->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::save_rotation_data ) );	this->Connect( m_menuItem6->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::select_datfile ) );	this->Connect( m_menuItem1->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::exit_application ) );}MainWinGui::~MainWinGui(){	// Disconnect Events	m_scrolledWindow1->Disconnect( wxEVT_ENTER_WINDOW, wxMouseEventHandler( MainWinGui::show_ruler ), NULL, this );	m_scrolledWindow1->Disconnect( wxEVT_LEFT_DOWN, wxMouseEventHandler( MainWinGui::mark ), NULL, this );	m_scrolledWindow1->Disconnect( wxEVT_PAINT, wxPaintEventHandler( MainWinGui::draw_bitmap ), NULL, this );	m_listCtrl1->Disconnect( wxEVT_COMMAND_LIST_COL_BEGIN_DRAG, wxListEventHandler( MainWinGui::anti_resize ), NULL, this );	m_listCtrl1->Disconnect( wxEVT_COMMAND_LIST_ITEM_DESELECTED, wxListEventHandler( MainWinGui::update_selected_tag ), NULL, this );	m_listCtrl1->Disconnect( wxEVT_COMMAND_LIST_ITEM_FOCUSED, wxListEventHandler( MainWinGui::update_selected_tag ), NULL, this );	m_listCtrl1->Disconnect( wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEventHandler( MainWinGui::update_selected_tag ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_TOP, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_BOTTOM, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_LINEUP, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_LINEDOWN, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_PAGEUP, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_PAGEDOWN, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_THUMBTRACK, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_THUMBRELEASE, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	m_slider1->Disconnect( wxEVT_SCROLL_CHANGED, wxScrollEventHandler( MainWinGui::set_gamma ), NULL, this );	set_antennareach_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::set_rayon ), NULL, this );	reset_antennareach_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_rayon ), NULL, this );	set_tailreach_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::set_tail ), NULL, this );	reset_tailreach_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_tail ), NULL, this );	set_size_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::ruler ), NULL, this );	reset_size_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_size ), NULL, this );	set_headwidth_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::set_headwidth ), NULL, this );	reset_headwidth_b->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( MainWinGui::reset_headwidth ), NULL, this );	this->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::load_tracking_file ) );	this->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::load_frame_bitmap ) );	this->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::load_rotation_data ) );	this->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::save_rotation_data ) );	this->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::select_datfile ) );	this->Disconnect( wxID_EXIT, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWinGui::exit_application ) );	}